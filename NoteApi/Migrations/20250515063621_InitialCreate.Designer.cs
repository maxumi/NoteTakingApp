// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteApi.Data;

#nullable disable

namespace NoteApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250515063621_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("NoteApi.Data.FileSystemEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FolderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.HasIndex("ParentId");

                    b.ToTable("FileSystemEntry");

                    b.HasDiscriminator().HasValue("FileSystemEntry");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("NoteApi.Data.Folder", b =>
                {
                    b.HasBaseType("NoteApi.Data.FileSystemEntry");

                    b.HasDiscriminator().HasValue("Folder");
                });

            modelBuilder.Entity("NoteApi.Data.Note", b =>
                {
                    b.HasBaseType("NoteApi.Data.FileSystemEntry");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Note");
                });

            modelBuilder.Entity("NoteApi.Data.FileSystemEntry", b =>
                {
                    b.HasOne("NoteApi.Data.Folder", null)
                        .WithMany("Children")
                        .HasForeignKey("FolderId");

                    b.HasOne("NoteApi.Data.FileSystemEntry", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("NoteApi.Data.Folder", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
